using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;

namespace AdventOfCode2018
{
    public class ProgramDay13
    {
        public static void Run()
        {
            Console.WriteLine("ProgramDay13");

            Stopwatch watch = Stopwatch.StartNew();

            Console.WriteLine("Part one");
            watch.Restart();
            partOne();
            watch.Stop();
            Console.WriteLine($"Done in: {watch.Elapsed.TotalMilliseconds}ms");

            Console.WriteLine("Part two");
            watch.Restart();
            partTwo();
            watch.Stop();
            Console.WriteLine($"Done in: {watch.Elapsed.TotalMilliseconds}ms");
        }

        static void partOne()
        {
            executePartOne(parse(inputTestPartOne));
            executePartOne(parse(input));
        }

        static void executePartOne(Tuple<GridPoint[,], List<Cart>> result)
        {
            GridPoint[,] grid = result.Item1;
            List<Cart> carts = result.Item2;

            Cart crashedCart = null;

            while (true)
            {
                if (crashedCart != null)
                    break;

                carts = carts.OrderBy(x => x.Y).ThenBy(x => x.X).ToList();

                foreach (Cart cart in carts)
                {
                    if (cart.Crashed)
                        continue;

                    DoMove(grid, cart);

                    Cart otherCart = carts.SingleOrDefault(x => x != cart && !x.Crashed && x.X == cart.X && x.Y == cart.Y);

                    if (otherCart != null)
                    {
                        cart.Crashed = true;

                        otherCart.Crashed = true;

                        crashedCart = cart;

                        break;
                    }
                }
            }

            Console.WriteLine("Crashed cart: " + crashedCart.X + ", " + crashedCart.Y);
        }

        static void partTwo()
        {
            executePartTwo(parse(inputTestPartTwo));
            executePartTwo(parse(input));
        }

        static void executePartTwo(Tuple<GridPoint[,], List<Cart>> result)
        {
            GridPoint[,] grid = result.Item1;
            List<Cart> carts = result.Item2;

            Cart latestCart = null;

            while (true)
            {
                if (carts.Count(x => !x.Crashed) == 1)
                {
                    latestCart = carts.Single(x => !x.Crashed);

                    break;
                }

                carts = carts.OrderBy(x => x.Y).ThenBy(x => x.X).ToList();

                foreach (Cart cart in carts)
                {
                    if (cart.Crashed)
                        continue;

                    DoMove(grid, cart);

                    Cart otherCart = carts.SingleOrDefault(x => x != cart && !x.Crashed && x.X == cart.X && x.Y == cart.Y);

                    if (otherCart != null)
                    {
                        cart.Crashed = true;

                        otherCart.Crashed = true;
                    }
                }
            }

            Console.WriteLine("Latest cart: " + latestCart.X + ", " + latestCart.Y);
        }

        private static void DoMove(GridPoint[,] grid, Cart cart)
        {
            GridPoint next;

            switch (cart.Direction)
            {
                case CartDirection.Up:

                    cart.Y -= 1;

                    next = grid[cart.X, cart.Y];

                    switch (next)
                    {
                        case GridPoint.CornerSlash:
                            cart.Direction = CartDirection.Right;
                            break;
                        case GridPoint.CornerBackslash:
                            cart.Direction = CartDirection.Left;
                            break;
                        case GridPoint.Intersection:

                            switch (cart.NextTurn)
                            {
                                case CartTurn.Left:
                                    cart.Direction = CartDirection.Left;
                                    break;
                                case CartTurn.Right:
                                    cart.Direction = CartDirection.Right;
                                    break;
                            }

                            cart.LatestTurn = cart.NextTurn;
                            break;
                    }

                    break;
                case CartDirection.Down:

                    cart.Y += 1;

                    next = grid[cart.X, cart.Y];

                    switch (next)
                    {
                        case GridPoint.CornerSlash:
                            cart.Direction = CartDirection.Left;
                            break;
                        case GridPoint.CornerBackslash:
                            cart.Direction = CartDirection.Right;
                            break;
                        case GridPoint.Intersection:

                            switch (cart.NextTurn)
                            {
                                case CartTurn.Left:
                                    cart.Direction = CartDirection.Right;
                                    break;
                                case CartTurn.Right:
                                    cart.Direction = CartDirection.Left;
                                    break;
                            }

                            cart.LatestTurn = cart.NextTurn;
                            break;
                    }

                    break;
                case CartDirection.Left:

                    cart.X -= 1;

                    next = grid[cart.X, cart.Y];

                    switch (next)
                    {
                        case GridPoint.CornerSlash:
                            cart.Direction = CartDirection.Down;
                            break;
                        case GridPoint.CornerBackslash:
                            cart.Direction = CartDirection.Up;
                            break;
                        case GridPoint.Intersection:

                            switch (cart.NextTurn)
                            {
                                case CartTurn.Left:
                                    cart.Direction = CartDirection.Down;
                                    break;
                                case CartTurn.Right:
                                    cart.Direction = CartDirection.Up;
                                    break;
                            }

                            cart.LatestTurn = cart.NextTurn;
                            break;
                    }

                    break;
                case CartDirection.Right:

                    cart.X += 1;

                    next = grid[cart.X, cart.Y];

                    switch (next)
                    {
                        case GridPoint.CornerSlash:
                            cart.Direction = CartDirection.Up;
                            break;
                        case GridPoint.CornerBackslash:
                            cart.Direction = CartDirection.Down;
                            break;
                        case GridPoint.Intersection:

                            switch (cart.NextTurn)
                            {
                                case CartTurn.Left:
                                    cart.Direction = CartDirection.Up;
                                    break;
                                case CartTurn.Right:
                                    cart.Direction = CartDirection.Down;
                                    break;
                            }

                            cart.LatestTurn = cart.NextTurn;
                            break;
                    }

                    break;
            }
        }

        static Tuple<GridPoint[,], List<Cart>> parse(string[] input)
        {
            GridPoint[,] grid = new GridPoint[input[0].Length, input.Length];
            List<Cart> carts = new List<Cart>();

            for (int y = 0; y < input.Length; y++)
            {
                string row = input[y];

                for (int x = 0; x < row.Length; x++)
                {
                    switch (row[x])
                    {
                        case '-':
                            grid[x, y] = GridPoint.Horizontal;
                            break;
                        case '|':
                            grid[x, y] = GridPoint.Vertical;
                            break;
                        case '/':
                            grid[x, y] = GridPoint.CornerSlash;
                            break;
                        case '\\':
                            grid[x, y] = GridPoint.CornerBackslash;
                            break;
                        case '+':
                            grid[x, y] = GridPoint.Intersection;
                            break;
                        case '^':
                            grid[x, y] = GridPoint.Vertical;

                            carts.Add(new Cart(x, y, CartDirection.Up));

                            break;
                        case 'v':
                            grid[x, y] = GridPoint.Vertical;

                            carts.Add(new Cart(x, y, CartDirection.Down));

                            break;
                        case '<':
                            grid[x, y] = GridPoint.Horizontal;

                            carts.Add(new Cart(x, y, CartDirection.Left));

                            break;
                        case '>':
                            grid[x, y] = GridPoint.Horizontal;

                            carts.Add(new Cart(x, y, CartDirection.Right));

                            break;
                        default:
                            grid[x, y] = GridPoint.None;
                            break;
                    }
                }
            }

            return new Tuple<GridPoint[,], List<Cart>>(grid, carts);
        }

        public class Cart
        {
            public int X { get; set; }
            public int Y { get; set; }

            public bool Crashed { get; set; }

            public CartDirection Direction { get; set; }

            public CartTurn LatestTurn { get; set; }

            public CartTurn NextTurn
            {

                get
                {
                    switch (this.LatestTurn)
                    {
                        case CartTurn.Left:
                            return CartTurn.Straight;
                        case CartTurn.Straight:
                            return CartTurn.Right;
                        case CartTurn.Right:
                            return CartTurn.Left;
                    }

                    throw new NotSupportedException();
                }
            }

            public Cart(int x, int y, CartDirection direction)
            {
                this.X = x;
                this.Y = y;
                this.Direction = direction;
                this.LatestTurn = CartTurn.Right;
            }
        }

        public enum CartTurn
        {
            Left,
            Straight,
            Right
        }

        public enum CartDirection
        {
            Up,
            Down,
            Left,
            Right
        }

        public enum GridPoint
        {
            None,
            Horizontal,
            Vertical,
            CornerSlash,
            CornerBackslash,
            Intersection
        }

        static string[] inputTestPartOne = new string[] {
            @"/->-\        ",
            @"|   |  /----\",
            @"| /-+--+-\  |",
            @"| | |  | v  |",
            @"\-+-/  \-+--/",
            @"  \------/   ",
        };

        static string[] inputTestPartTwo = new string[] {
            @"/>-<\  ",
            @"|   |  ",
            @"| /<+-\",
            @"| | | v",
            @"\>+</ |",
            @"  |   ^",
            @"  \<->/"
        };

        static string[] input = new string[] {
            @"                     /---------------\                                                                                                                ",
            @"                     |       /-------+---------------------\                                                                                          ",
            @"     /--------\      |       |       |   /-----------------+--------------------------------\                                                         ",
            @"     |        |      |       |       |   |                 |      /-------------------------+------------------------------------------------\        ",
            @"  /--+--------+------+-------+-------+---+----\            |      |           /-------------+------------\                                   |        ",
            @"  |  |      /-+------+-------+\      |   |    |            |  /---+-----------+-------------+------------+-----------------------------------+\       ",
            @"  |  |      | |      |       ||      |   |    |            |  |   |           |             |            |                                   ||       ",
            @"  |  |/-----+-+------+-------++------+---+----+------------+--+---+-----------+----\        |            |    /--------------------\         ||       ",
            @"  |  ||     | |      |       ||      |   |    |            |  |   |/----------+----+----\   |            |  /-+--------------------+\        ||       ",
            @"  |  ||     | |      |       ||      |   |    |            |  |   ||          |    |  /-+---+------------+--+-+----------------\   ||        ||       ",
            @"  |  ||    /+-+------+-------++------+---+----+------------+--+---++----------+----+--+-+---+\           |  | |                |   ||        ||       ",
            @"  |  ||    || |      |       ||      |   |    |          /-+--+---++----------+----+--+-+---++-----------+--+-+------------\   |   ||        ||       ",
            @"  |  \+----++-/      |       ||      |   |    |  /-------+-+--+---++----------+----+--+-+---++-----------+--+-+---------\  |   |   ||        ||       ",
            @"  |   |    ||        |       ||      |   |/---+--+-------+-+--+---++----------+----+--+-+---++---\    /--+--+-+---------+--+---+---++--------++---\   ",
            @"  |   |/---++--------+-------++------+---++---+--+-------+-+--+---++----\ /---+----+--+-+---++---+----+--+--+-+---------+--+--\|   ||        ||   |   ",
            @"  |   ||   ||        |  /----++----\ | /-++---+--+-------+-+--+---++----+-+---+----+--+-+---++---+----+--+--+-+---------+--+--++--\||        ||   |   ",
            @" /+---++---++\       |  |    ||    |/+-+-++---+--+-------+-+--+---++---\| |   |    |  | |   ||   |    |  |  | |         |  |  || /+++-----\  ||   |   ",
            @" ||   ||/--+++-------+--+----++----+++-+-++---+--+-------+-+--+---++---++-+---+----+--+-+---++---+-\  |  |  | \---------+--+--++-++/|     |  ||   |   ",
            @" ||   |||  |||       |  | /--++----+++-+-++---+--+-------+-+--+---++---++-+---+----+--+-+---++---+-+--+--+--+--\        |  |  || || |     |  ||   |   ",
            @" ||   |||  |||       |  | |  ||    ||| | ||   |  |       | |  |   ||   || |   |    |  | |   ||   | |  |  |  |  |        |  |  || || |     |  ||   |   ",
            @" ||   |||  |||       |/-+-+--++----+++-+-++--\|  |/------+-+--+---++---++-+---+----+--+-+---++---+-+--+--+--+--+--------+--+--++-++-+-----+<-++---+\  ",
            @" ||   |||  |||       || | |  ||    ||| | ||  ||  ||      | |  |   ||   || |   |    |  | |   ||   |/+--+--+--+--+--\     |  |  || || |     |  ||   ||  ",
            @" ||   |||  \++-------++-+-+--++----+++-+-++--++--++------+-+--+---++---++-+---+----+--+-+---+/   |||  |  |  |  |  |     |  |  || || |     |/-++---++-\",
            @" ||   |||   ||       || | |  ||    ||| | ||  ||  ||      | |  |   ||   || |   |    |  | |   |    |||  |  |  |  |  |     |  |  || || |     || ||   || |",
            @" ||   |||   ||   /---++-+-+--++----+++-+-++--++--++------+-+--+---++---++-+---+----+--+-+---+----+++--+\ |  |  |  |     |  |  || || |     || ||   || |",
            @" \+---+++---+/   |   || | |  ||    ||| | |\--++--++------+-+--+---++---++-+---+----+--+-+---+----/||  || |  |  |  |     |  |  || || |     || ||   || |",
            @"  \---+++---+----+---++-+-+--++----+++-+-+---+/  ||      | |  |   ^|  /++-+---+----+--+-+---+---\ ||  || |  |  |  |     |  |  || || |     || ||   || |",
            @"      |||   |    |   || | |  ||    ||| | |   |   ||      | |  |   ||  ||| |   |    |  | |   |   | || /++-+--+--+--+-----+--+--++-++-+-----++-++--\|| |",
            @"      |||   |    |   || | |  ||   /+++-+-+---+---++------+-+--+--\||  ||| |   |    | /+-+-->+---+-++-+++-+--+--+--+-----+--+--++-++-+-----++-++-\||| |",
            @"      |||   |    |   || | |  ||   |||| | |   |   ||      | |  |  |||  ||| |   |    | || |   |   | || ||| |  |  |  |     |  |  || || |     || || |||| |",
            @"      |||   |    |   || | |  ||   |||| | |   |   \+------+-+--+--+++--+++-+---+----+-++-+---+---+-++-+++-+--+--+--+-----/  |  || || |     || || |||| |",
            @"      |||   |    |   || | |  ||   |||| | |/--+----+------+-+--+--+++--+++-+---+----+-++-+---+---+-++-+++-+--+--+--+-----\  |  || || |     || || |||| |",
            @"      ||| /-+----+---++-+-+--++---++++-+-++--+----+------+-+--+--+++--+++-+---+----+-++-+--\|   | || ||| |  |  |  |     |  |  || || |     || || |||| |",
            @"/-----+++-+-+----+---++-+-+--++---++++-+-++--+----+------+-+--+--+++--+++-+---+----+-++-+--++--\| || ||| |  |  |  |     |  |  || || |     || || |||| |",
            @"|     ||| | |    |   || | |  ||   |||| | ||  |    |      | |  |  |||  ||| |   |    | || |  ||  || || ||| |  |  |  |     |  |  || \+-+-----/| || |||| |",
            @"|     ||| | |    |   || | |  ||   |||| | ||  |    |      | |  |  |||  ||| |   |    | || |  ||  || || ||| |  |  |  |     |  |  ||  | |      | || |||| |",
            @"|     ||| | |    |/--++-+-+--++---++++-+-++-\|   /+------+-+--+--+++--+++-+---+----+-++-+--++--++-++-+++-+--+--+--+-----+--+--++--+-+----\ | || |||| |",
            @"|     |\+-+-+----++--++-+-+--++---++++-+-++-++---++------+-+--+--+++--++/ |   |    | || |  ||  || || ||| |  |  |  |     |  |  ||  | |    | | || |||| |",
            @"|  /--+-+-+-+----++--++-+-+--++---++++-+-++-++---++\     | |  | /+++--++--+-\ |    | || |  ||  || || ||| |  |  |  |     |  |  ||  | |    | | || |||| |",
            @"|  |  | | | |    ||  |\-+-+--++---++++-+-++-+/   |||  /--+-+--+-++++--++--+-+-+----+-++-+--++--++-++-+++-+--+--+--+-----+--+--++\ | |    | | || |||| |",
            @"|  |  | | | |    ||  |  | |  ||   |||| |/++-+----+++--+--+-+--+-++++--++--+-+-+----+-++-+--++--++-++-+++-+--+-\|  |     |  |  ||| | |    | | || |||| |",
            @"|  |  | | | |    ||  |  | |  ||   |||| |||| |    |||  |  | |  | ||||  ||  | | |    | || |  ||  || || ||| |  | ||  |     |  |  ||| | |    | | || |||| |",
            @"|  |  | | | |    ||  |  | |  ||   |||| |||| |    ||| /+--+-+--+-++++-\||  | | |    | || |  ||  || || ||| |  | ||  |     |  |  ||| | |    | | || |||| |",
            @"|  |  | | | |    ||  |  | |  ||   |||| |||| |    ||| ||  | |  | ||\+-+++--+-+-+----+-++-+--++--++-++-+++-+--+-++--+-----+--+--+++-+-+----+-+-/| |||| |",
            @"|  |  | | | |    ||  |  | |  ||  /++++-++++-+----+++-++--+-+--+-++-+-+++--+-+-+----+-++-+--++--++-++-+++-+--+-++--+\    |  |  ||| | |    | |  | |||| |",
            @"|  |  | | \-+----++--+--+-+--++--+++++-++++-+----+++-++--+-+--+-++-+-+++--+-+-+----+-++-+--/|  || \+-+++-+--+-++--/|    |  |  ||| | |    | |  | |||| |",
            @"|  |  | |   |    ||  |  \-+--++--++/|| |||| |/---+++-++--+-+--+-++-+-+++--+-+-+----+-++-+---+--++--+-+++-+--+-++---+----+--+--+++-+-+----+-+--+\|||| |",
            @"|  |  | |   |    ||  |    |  ||  || || |||| ||   ||| ||  | |  | || | |||  | |/+----+-++-+---+--++--+-+++-+--+-++---+---\|  |  ||| | |    | |  |||||| |",
            @"|  |  | |   |    ||  |    |/-++--++-++-++++-++---+++-++--+-+--+-++-+-+++--+-+++----+-++-+---+--++\ | ||| |  | ||   |   ||  |  ||| | |    | |  |||||| |",
            @"|  \--+-+---+----++--+----++-++--++-++-++++-++---++/ ||  |/+--+-++-+-+++--+-+++----+-++-+---+--+++-+-+++-+--+-++---+---++--+--+++-+-+\   | |  |||||| |",
            @"|     | |   |    ||/-+----++-++--++-++-++++\||   ||  ||  |||  | || | |||  | |||    | || | /-+--+++-+-+++-+>-+-++---+---++--+--+++-+-++---+-+--++++++\|",
            @"|     | |   |    ||| |    || ||  || || |||||||   ||  ||  |||  | || | |||  | |||/---+-++-+-+-+--+++-+-+++-+-\| ||   |   ||  |  ||| | ||   | |  ||||||||",
            @"|     | |   |    ||| |    || ||  || || |||||||   ||  ||  |||  | || | |||  | ||||   | || | | |  ||| | ||| | || ||   |   ||  |  ||| | ||   | |  ||||||||",
            @"|     | |   |    ||| |   /++-++--++-++-+++++++---++--++--+++--+-++-+-+++--+-++++---+-++-+-+-+--+++-+-+++-+-++-++---+---++-\|  ||| | ||   | |  ||||||||",
            @"|     |/+---+----+++-+---+++-++\ || || |||||||   ||  ||  |||  | || | |||  | ||\+---+-++-+-+-+--+++-+-+++-/ || ||   |   || ||  ||| | ||   | |  ||||||||",
            @"|     \++---+----+++-+---+++-+++-++-++-+++++++---++--++--+++--+-++-+-+++--+-++-+---/ || | | |  ||| | |||   || ||   |   || ||  ||| | ||   | |  ||||||||",
            @"|      ||   |    ||| |   ||| ||| \+-++-+++++++---++--++--+++--+-++-+-+++--+-++-+-----++-+-+-+--+++-+-+++---++-++---/   || ||  ||| | ||   | |  ||||||||",
            @"|/-----++---+----+++-+---+++-+++--+-++-+++++++---++--++--+++--+-++-+-+++--+-++-+-----++\| | |  ||| | |||   || ||       || ||/-+++-+-++---+\|  ||||||||",
            @"||     ||   |    ||| |   ||| |||  | || |||||||   ||  ||  |||/-+-++-+-+++--+-++-+-----++++-+-+--+++-+-+++---++-++--\   /++-+++-+++-+-++-\ |||  ||||||||",
            @"||     ||   |    ||| |   ||| ||| /+-++-+++++++---++--++--++++-+-++-+-+++--+-++-+-----++++-+-+--+++-+-+++---++-++--+---+++-+++-+++-+-++-+-+++\ ||||||||",
            @"||     ||   |    ||| |   ||| ||| || || |||||||   ||  ||  |||| | || | |||  | || |     |||| | |  ||| | ||v   |\-++--+---+++-+++-+++-+-/| | |||| ||||||||",
            @"||     ||   |    ||| |   ||| ||| || || |||||||   ||  |\--++++-+-++-+-+++--+-++-+-----++++-+-+--+++-+-+++---+--++--+---+++-+++-++/ |  | | |||| ||||||||",
            @"||     ||/--+----+++-+---+++-+++-++-++-+++++++---++--+---++++\\-++-+-+++--+-++-+-----++++-+-+--+++-+-+++---+--++--+---+++-+++-++--+--+-+-++++-/|||||||",
            @"||     |||  |    \++-+---+++-+++-++-++-+++++++---++--+---+++++--++-+-+++--+-++-+-----++++-+-+--+++-+-++/  /+--++--+---+++-+++-++--+--+-+-++++-\|||||||",
            @"||     |||  |     || |   ||| ||| |\-++-+++++++---++--+---+++++--+/ | |||  | || |     ||||/+-+--+++-+-++---++\ ||  |   ||| ||| ||  |  | | |||| ||||||||",
            @"||     |||  |     || | /-+++-+++-+--++-+++++++\  ||  |   |||||  |  | |||  | || |   /-++++++-+--+++-+-++---+++-++--+---+++-+++-++--+--+\| |||| ||||||||",
            @"||     |||/-+-----++-+-+-+++-+++-+--++-++++++++--++--+---+++++--+--+\|||  | || |   | |||||| |  ||| | |\---+++-++--+---+++-+++-++--+--+++-++++-++++/|||",
            @"||     |||| |     || | | ||| |^| |  || ||||||||  ||  |   |||||  |  |||||  | || |   | |\++++-+--+++-+-+----+++-++--+---+++-+++-+/  |  ||| |||| |||| |||",
            @"||     |||| |     || | | ||| ||| |  || ||||||||  || /+---+++++--+--+++++--+-++\\---+-+-++++-+--+++-+-+----+/| ||  |   ||| ||| |   |  ||| |||| |||| |||",
            @"||     |||| |     || | | ||| ||| |  \+-++++++++--++-++---+++++--+--++++/  | |\+----+-+-++++-+--+++-+-+----+-+-++--+---+/| ||| |   |  ||| |||| |||| |||",
            @"||     \+++-+-----++-+-+-+++-++/ |   | ||||||||  || ||   |||||  |  ||||   | | |    | | |||| |  ||| | |    | | ||  |   | | ||| |   |  ||| |||| |||| |||",
            @"||      ||| |     |\-+-+-+++-++--+---+-++++/|||  || ||   |||||  |  ||||   \-+-+----+-+-++++-+--+++-+-+----+-+-++--+---+-+-+++-/   |  ||| |||| |||| |||",
            @"||   /--+++-+-----+--+-+-+++-++--+---+-++++-+++\ || ||   |||||  |  ||||/----+-+----+-+-++++-+--+++-+\|    | | ||  |   | | |||     |  ||| |||| |||| |||",
            @"|\---+--+++-+-----+--+-+-+++-++--+---+-++++-++++-++-++---+++++--+--+++++----+-+----+-+-/||| |  ||| |||    | | ||  |   | | |||     |  ||| |||| |||| |||",
            @"|    |  ||| |     |  \-+-+++-++--+---/ |||| |||| || ||   |||||  |  |||||    | |    | \--+++-+--+++-+++----+-+-++--+---+-+-+++-----+--+++-++++-++/| |||",
            @"|    |  ||| |     |    | ||| ||  |     |||| |||| || ||   |||||  |  |||||    | |    |    ||| |  |||/+++----+-+-++--+---+\| |||     |  ||| |||| || | |||",
            @"|    |  ||| |     |    | ||| ||  |     ||\+-++++-++-++---+++++--+--+++++----+-+----+----+++-/  |||||||    | | ||  |   ||| |||     |  ||| ||v| || | |||",
            @"|    |  ||| |     |    | ||| ||  |     || |/++++-++-++---+++++--+--+++++----+-+->--+----+++----+++++++----+-+-++--+---+++-+++-----+--+++-++++-++\| |||",
            @"|    |  ||| |     |    | ||| ||  |     || |||\++-++-++---+++++--+--+++++----+-+----+----+++----+++++++----+-+-++--+---+++-+++-----+--+++-++++-+/|| |||",
            @"|    |  ||| |     |    | ||| ||  |     || ||| || || ||   |||||  |  \++++----+-+----+----/|| /--+++++++----+-+-++--+---+++-+++-----+\ ||| |||| | || |||",
            @"|    |  |||/+-----+----+-+++-++--+--\  || ||| || \+-++---+++++--+---++++----+-+----+-----++-+--+++++++----+-+-++--+---+++-+++-----++-+++-/||| | || |||",
            @"|    |  |||||     |    | ||| || /+--+--++-+++-++--+-++---+++++--+---++++----+-+----+-----++\|  |||||||    | | ||  |   ||| |||    /++-+++--+++-+-++\|||",
            @"|    |  |\+++-----+----+-+++-++-++--+--++-+++-++--+-++---++++/  |   ||||    | |    |     ||||  |||||||    | | ||  |   ||| |||    ||| |||  ||| | ||||||",
            @"|    |  | |||     |    | ||| \+-++--+--++-+++-++--+-++---++/|   |   ||||    | |    |     ||||  |||||||    | | |v  |   ||| |||    ||| |||  ||| | |||v||",
            @"|    |  | |||     |    | |||  | ||  |  || ||| ||  | \+---++-+---+---++++----+-/    |     ||||  |||||||    |/+-++--+---+++-+++----+++\|||  ||| | ||||||",
            @"|    |  | |||     |   /+-+++--+-++--+--++-+++-++--+--+---++-+---+---++++----+------+-----++++\ |||\+++----+++-++--+---+/| |||    |||||||  ||| | ||||||",
            @"|    |  | |||     |   || |||  | ||  |  || ||| ||  |  |   || |   |   ||||    |      |     ||||| ||| ||| /--+++-++--+---+\| |||    |||||||  ||| | ||||||",
            @"|    | /+-+++-----+\  || |||  | ||  |  || ||| ||  |  |   || |   \---++++----/      \-----+++++-+++-+++-+--+++-++--+---+++-+++----+++++/|  ||| | ||||||",
            @"|    | || |||     ||  || |||  | ||  |  || ||| ||  |  | /-++-+-------++++-----------------+++++-+++-+++-+-\||| ||  |   ||| |||    ||||| |  ||| | ||||||",
            @"|    |/++-+++-----++--++-+++--+-++--+--++-+++-++--+--+-+-++-+----\  ||||                 ||||| ||| ||| | |||| ||  |  /+++-+++----+++++-+--+++\| ||||||",
            @"|    |||| ||| /---++--++-+++--+-++--+--++-+++-++--+--+-+-++-+----+--++++-----------------+++++-+++-+++-+\|||| ||  |  |||| |||    ||||| |  ||||| ||||||",
            @"|    |||| |||/+---++--++-+++--+-++--+--++-+++-++--+--+-+-++-+----+--++++-----------------+++++-+++-+++-++++++\||  |  |||| |||    ||||| |  ||||| ||||||",
            @"|    |||| |||||   ||  || |||  | ||  |  || ||| ||  |  |/+-++-+----+--++++---\             ||||| ||| ||| |||||||||  |  |||| |||    ||||| |  ||||| ||||||",
            @"|    |||| |||||   ||  |\-+++--+-++>-+--++-+++-/|  |  ||| || \----+--++++---+-------------+++++-+++-+++-+++++++++--/  |||| |||    ||||| |  ||||| ||||||",
            @"|/---++++-+++++---++--+--+++--+-++--+--++-+++--+--+--+++-++------+--++++---+----------\  ||||| ||| ||| |||||||||     |||| |||    ||||| |  ||||| ||||||",
            @"||   |||| |||||   ||  |/-+++--+-++--+--++-+++--+--+--+++-++------+--++++---+\         |  ||||| ||| ||| |||||||||     |||| |||    ||||| |  ||||| ||||||",
            @"||   |||| |||||   ||  || |||  | ||  |  || |||  |  |  ||| ||      |  ||||   ||  /------+--+++++\||| ||| |||||||||     |\++-+++----+++++-/  ||||| ||||||",
            @"||   |||| \++++---++--++-+++--+-++--+--++-+++--+--+--+++-++------+--/|||   ||  |      |  ||||||||| ||| |||||||||     | || |||    |||||    ||||| ||||||",
            @"||   ||||  ||||   ||  || |||  | ||  |  || |||  |  |  ||| \+------+---+++---++--+------+--+++++++++-+++-+++++++++-----+-++-+/|    |||||    ||||| ||||||",
            @"||  /++++--++++---++--++-+++--+-++--+--++-+++--+--+--+++--+------+---+++---++--+------+--+++++++++-+++-+++++++++\    | || | |    |||||    ||||| ||||||",
            @"||  |||||  ||||   || /++-+++--+-++--+--++-+++--+--+--+++--+------+\  |||   ||  |      |  ||||||^|| ||| ||||||||||    | || | |    |||||    ||||| ||||||",
            @"||  |||||  ||||   || ||| |||  | \+--+--++-+++--+--+--+++--+------++--+++---++--+------+--++/|||||| ||| ||||||||||    | || | |    |||||    ||||| ||||||",
            @"||  ||\++--++++---++-+++-+++-<+--+--+--++-+++--+--+--+++--+------/|  |v|   ||  |      |  || |||||| ||| \+++++++++----+-/| | |    |||||    ||||| ||||||",
            @"|| /++-++--++++---++-+++-+++--+--+--+--++-+++--+--+--+++--+-------+--+++---++--+------+--++-++++++-+++\ |||||||||    |  | | |    \++++----+++++-++/|||",
            @"|| ||| ||  ||||   || ||| |||  |  |  |  || |||  |  |  |||  |       |  |||   ||  |      |  || |||||| ||\+-+++++++++----+--+-+-+-----++++----+++++-+/ |||",
            @"|| ||\-++--++++<--++-+++-+++--+--+--+--++-+++--/  |  |||  |       |  |||   ||  |      |  || |||||| || | |||||||||    |  | | |     ||||    ||||| |  |||",
            @"|| ||  || /++++---++-+++-+++--+--+--+--++-+++-----+--+++--+-------+--+++---++--+------+-\|| |||||| || | |||||||||    |  | | |     ||||    ||||| |  |||",
            @"|| ||  || |||||   || ||| |||  |  |  |  || |||     |  |||  |       |  ||\---++--+------+-+++-++++++-+/ | |||||||||    |  | | |     ||||    ||||| |  |||",
            @"|| ||  || |||||   || ||| |||  |  |  |  || |||     |  |||  |       |  ||    ||  |      | ||\-++++++-+--+-+++++++++----+--+-+-+-----++++----+++++-+--+/|",
            @"|| ||  || |||||   || ||| |||  |  |  |  || |||     |  |||  |       |  ||    ||  |      | ||  |||||| |  | |||||||||    |  | | |     ||||    ||||| |  | |",
            @"|| ||  || ||\++---++-+++-+++--/  |  |  |\-+++-----+--+++--+-------+--++----++--+------+-++--++++++-+--+-++++++/||    |  | | |     ||||    ||||| |  | |",
            @"|| ||  || || ||   || ||| \++-----+--+--+--+++-----+--+++--+-------+--++----++--+------+-++--++++++-+--+-++++++-++----+--+-/ |     ||||    ||||| |  | |",
            @"|| ||  || || ||   || |||  |\-----+--+--+--+++-----+--+++--+-------+--++----++--+------+-++--+++++/ |  | |||||| ||    |  |   |     ||||    ||||| |  | |",
            @"|| ||  |\-++-++---++-+++--+------+--+--+--+++-----+--+++--+-------+--++----++--+------+-++--+++++--/  | |||||| ||    |  |   |     ||||    ||||| |  | |",
            @"|| ||/-+--++-++--\|| |||  |      |  |  |  |||     |  |||  |       |  ||    ||  |      | ||  |||||     | |||||| ||    |  |   |     ||||    ||||| |  | |",
            @"|| |||/+--++-++--+++-+++--+\     |  |  |  |||     | /+++--+-------+--++----++--+------+-++--+++++-----+-++++++-++--\ |  |   |     ||||    ||||| |  | |",
            @"|| |||||  || ||  ||| |||  ||     |  |  |  |||     | ||||  |       |  ||    ||  \------+-++--++/||     | |||||| ||  | |  |   |     ||||    ||||| |  | |",
            @"|| |||||  || ||  ||| |||  \+-----+--+--+--+++-----+-++++--+-------+--++----++---------+-++--++-++-----+-++++++-/|  | |  |   \-----++++----/|||| |  | |",
            @"|| |||||  || ||  ||| |||   | /---+--+--+--+++-----+-++++--+-------+--++----++---------+-++--++-++-----+-++++++--+--+-+\ |         ||||     |||| |  | |",
            @"|| |||||  || ||  ||| |||   | |   |  |  \--+++-----+-++++--+-------+--++----++---------+-++--++-++-----+-++++++--+--+-++-+---------/|||     |||| |  | |",
            @"|| |||||  || ||  ||| \++---+-+---+--+-----+++-----+-++++--+-------/  ||    ||         | ||  || ^|     | ||||||  |  | || |          |||     |||| |  | |",
            @"|| |||||  || ||  |||  ||   | |   |  |     |||     \-++++--+----------++----++---------+-++--++-++-----+-++++++--+--+-++-+----------+++-----++++-+--/ |",
            @"|| |||||  || ||  |||  ||   | |   \--+-----+++-------++++--+----------++----++---------+-++--++-++-----+-++++++--+--+-++-+----------+++-----+/|| |    |",
            @"|| |||||  || ||  |||  ||   | |      |     |||       ||||/-+----------++----++---------+-++--++-++-----+-++++++--+--+-++-+----------+++\    | || |    |",
            @"|| |||||  || ||  |||  ||   | |      |     |\+-------+++++-+----------++----++---------+-++--++-++-----+-++++++--+--+-++-+----------++++----+-++-/    |",
            @"|| ||^||  |\-++--+++--++---+-+------/     | |       \++++-+----------++----++---------+-++--++-++-----+-++++++--+--/ || |          ||||    | ||      |",
            @"|| |||||  |  ||  |||  ||/--+-+------------+-+--------++++-+--------\ ||    ||         | ||  || ||     | ||||||  |    || |          ||||    | ||      |",
            @"|| |||||  |  ||  |||  |||  | |            | |        \+++-+--------+-/|    ||         | ||  || ||     | ||||||  |    || |          ||||    \-++------/",
            @"\+-+++++--+--++--+++--+++--+-+------------+-+---------+++-+--------+--+----++---------+-++--++-/|     | ||||||  |    || |          ||||      ||       ",
            @" | |||||  |  ||  |||  |||  | |    /-------+-+-------\ ||| |        |  \----++---------+-++--++--/     | ||||||  |    || |          ||||      ||       ",
            @" | |||||  |  ||  |\+--+++--+-+----+-------+-/       | ||| |        |       ||         | ||  ||        | ||||||  |    || |          ||||      ||       ",
            @" \-+++++--+--++--+-+--+++--+-+----+-------+---------+-+++-+--------+-------++---------/ ||  ||        | ||||||  |    || |          ||||      ||       ",
            @"   |||||  |  ||  | |  |||  | |    |       \---------+-+++-+--------+-------++-----------++--++--------+-++++++--+----++-/          ||||      ||       ",
            @"   |||||  |  \+--+-+--+++--+-+----+-----------------+-+++-+--------+-------++-----------++--++--------+-+++++/  |    ||            ||||      ||       ",
            @"   |||||  |   |  | |  |||  | |    |                 | ||| \--------+-------++-----------++--++--------+-+++++---+----++------------++/|      ||       ",
            @"   |\+++--+---+--+-+--+++--+-+----+-----------------+-+++----------+-------++-----------++--++--------+-+++++---/    ||            || |      ||       ",
            @"   | |||  |   \--+-+--+++--+-+----+-----------------+-+++----------+-------++-----------++--++--------+-/||||        ||            || |      ||       ",
            @"   | |\+--+------+-+--+++--/ \----+-----------------+-+++----------+-------++-----------++--++--------+--++++--------+/            || |      ||       ",
            @"   | | |  |      | |  |||         |                 | \++----------+-------/|           |\--++--------+--+++/        |             || |      ||       ",
            @"   | | |  |      | |  |||         \-----------------/  ||          |        |           |   ||        |  |\+---------+-------------++-+------+/       ",
            @"   | | |  |      | |  |\+------------------------------++----------+--------/           |   ||        |  | |         |             || |      |        ",
            @"   | | |  |      | |  | |                              ||          |                    |   \+--------+--+-+---------+-------------/| |      |        ",
            @"   | | |  |      | |  | |                              ||          |                    |    |        |  | |         |              | |      |        ",
            @"   | | |  |      | |  \-+------------------------------++----------+--------------------+----/        |  | |         |              | |      |        ",
            @"   | | |  |      | |    \------------------------------++----------/                    |             |  | \---------+--------------/ |      |        ",
            @"   | \-+--+------/ |                                   \+-------------------------------+-------------+--/           |                |      |        ",
            @"   |   |  |        |                                    \-------------------------------+-------------+--------------+----------------/      |        ",
            @"   |   \--+--------/                                                                    |             |              \-----------------------/        ",
            @"   |      \-----------------------------------------------------------------------------/             |                                               ",
            @"   \--------------------------------------------------------------------------------------------------/                                               "
        };
    }
}
